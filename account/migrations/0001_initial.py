# Generated by Django 3.0.4 on 2020-04-04 13:33

import datetime
from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        ('dietetic', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='IdentityUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=150, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='pseudo')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('password', models.CharField(max_length=128, verbose_name='mot de passe')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='dernière connexion')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='statut staff')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='statut super-utilisateur')),
            ],
            options={
                'verbose_name': 'Identité utilisateur',
            },
        ),
        migrations.CreateModel(
            name='StatusUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='est actif')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='utilisateur')),
            ],
            options={
                'verbose_name': 'Statut utilisateur',
            },
        ),
        migrations.CreateModel(
            name='ProfileUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('starting_weight', models.DecimalField(decimal_places=1, max_digits=4, null=True, verbose_name='poids de démarrage')),
                ('actual_goal_weight', models.DecimalField(decimal_places=1, max_digits=4, null=True, verbose_name='poids total à perdre')),
                ('final_weight', models.DecimalField(decimal_places=1, max_digits=4, null=True, verbose_name="poids d'objectif")),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='utilisateur')),
            ],
            options={
                'verbose_name': 'Profil utilisateur',
            },
        ),
        migrations.CreateModel(
            name='HistoryUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date de création')),
                ('start_questionnaire_completed', models.BooleanField(default=False, verbose_name='questionnaire validé')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='utilisateur')),
            ],
            options={
                'verbose_name': 'Historique utilisateur',
            },
        ),
        migrations.CreateModel(
            name='AdvicesToUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('advice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dietetic.RobotAdvices', verbose_name='conseil')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='utilisateur')),
            ],
            options={
                'verbose_name': "A destination de l'utilisateur : conseil",
            },
        ),
        migrations.AddField(
            model_name='identityuser',
            name='advices_to_user',
            field=models.ManyToManyField(through='account.AdvicesToUser', to='dietetic.RobotAdvices'),
        ),
        migrations.AddField(
            model_name='identityuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groupes'),
        ),
        migrations.AddField(
            model_name='identityuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='permissions utilisateur'),
        ),
        migrations.CreateModel(
            name='ResultsUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weighing_date', models.DateField(default=datetime.date.today, null=True, verbose_name='date de pesée')),
                ('weight', models.DecimalField(decimal_places=1, max_digits=4, null=True, verbose_name='poids')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='utilisateur')),
            ],
            options={
                'verbose_name': 'Résultats utilisateur',
                'unique_together': {('user', 'weighing_date')},
            },
        ),
    ]
